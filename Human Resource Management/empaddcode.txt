<asp:TextBox ID="TextBox5" runat="server" CssClass="form-control"></asp:TextBox>

<!-- Regular Expression Validator to check basic email format -->
<asp:RegularExpressionValidator 
    ID="EmailFormatValidator" 
    runat="server" 
    ControlToValidate="TextBox5" 
    ErrorMessage="Invalid email format" 
    ValidationExpression="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$" 
    ForeColor="Red">
</asp:RegularExpressionValidator>

<!-- Custom Validator to check if email ends with @gmail.com -->
<asp:CustomValidator 
    ID="GmailValidator" 
    runat="server" 
    ControlToValidate="TextBox5" 
    ErrorMessage="Email must be a gmail.com address" 
    OnServerValidate="ValidateGmail" 
    ForeColor="Red">
</asp:CustomValidator>

<asp:Button ID="SubmitButton" runat="server" Text="Submit" OnClick="SubmitButton_Click" />

<!-- Validation Summary to display errors -->
<asp:ValidationSummary 
    ID="ValidationSummary1" 
    runat="server" 
    ForeColor="Red" />



protected void ValidateGmail(object sender, ServerValidateEventArgs e)
{
    e.IsValid = e.Value.EndsWith("@gmail.com", StringComparison.OrdinalIgnoreCase);
}

protected void SubmitButton_Click(object sender, EventArgs e)
{
    if (Page.IsValid)
    {
        // Handle the form submission
    }
}















  try
  {
      string connstrg = ConfigurationManager.ConnectionStrings["NewHRMSString"].ConnectionString;

      using (SqlConnection sqlConn = new SqlConnection(connstrg))
      {
          string insertQuery = @"
  INSERT INTO [dbo].[Employees]
  (
      [Salutation], [FirstName], [LastName], [Image], [EmployeeCode], [DOB], [DOJ], [Gender], [Company],
      [Branch], [Department], [Designation], [CompanyId], [BranchId], [DepartmentId], [EmployeType], [EmpTypeId],
      [CompanyEmail], [PersonalEmail], [CompanyCellNo], [PersonalCelloNo], [PresentAddress], [PermanentAddress],
      [BloodGroup], [Status], [BankName], [BankAccNo], [IFSC], [PFStatus], [PfStatusId], [PfNo], [Esino],
      [PanNo], [Shift], [ShiftId], [Tocken], [EmpActivaDate], [CasualLeaves], [TaxId], [HighEducation1],
      [EducationYear1], [EducationUniversity1], [HighEducation2], [EducationYear2], [EducationUniversity2],
      [CreatedBy], [CreatedDate], [UpdatedBy], [UpdatedDate], [UpdatedCount], [DeleteBy], [DeletedDate],
      [DeletedStatus], [RestoredBy], [RestoredDate], [MaritialStatus], [Relation1], [FatherName], [FatherAadhar],
      [Relation2], [MotherName], [MotherAdhar], [Chaild1Name], [Chaild2Name], [EmpExpType], [ExptSalaryAnnum],
      [SalaryAnnum], [SalaryMonth], [Experience], [LastOneCompanyName], [LastOnePrevSalaryAnnum], [LastOnePrevSalaryMonth],
      [LastTwoCompanyName], [LastTwoPrevSalaryAnnum], [LastTwoPrevSalaryMonth], [EditDetailsStatus], [EmpInActiveDate],
      [FatherMobile], [MotherMobile], [BranchCode], [EducationPerventage1], [EducationPerventage2], [Last1CompanyDesignation],
      [Last2CompanyDesignation], [Last1CompanyFromYear], [Last1CompanyToYear], [Last2CompanyFromYear], [Last2CompanyToYear],
      [Last1CompanyMobileNumber], [Last2CompanyMobileYear], [NomineeName], [NomineeRelation], [SpouseName], [NomineeMobile],
      [NomineeAadhar],[ShiftType],[Shift2],[Shift3]
  )
  VALUES
  (
      @Salutation, @FirstName, @LastName, @Image, @EmployeeCode, @DOB, @DOJ, @Gender, @Company, @Branch, @Department,
      @Designation, @CompanyId, @BranchId, @DepartmentId, @EmployeType, @EmpTypeId, @CompanyEmail, @PersonalEmail,
      @CompanyCellNo, @PersonalCelloNo, @PresentAddress, @PermanentAddress, @BloodGroup, @Status, @BankName, @BankAccNo,
      @IFSC, @PFStatus, @PfStatusId, @PfNo, @Esino, @PanNo, @Shift, @ShiftId, @Tocken, @EmpActivaDate, @CasualLeaves,
      @TaxId, @HighEducation1, @EducationYear1, @EducationUniversity1, @HighEducation2, @EducationYear2,
      @EducationUniversity2, @CreatedBy, @CreatedDate, @UpdatedBy, @UpdatedDate, @UpdatedCount, @DeleteBy,
      @DeletedDate, @DeletedStatus, @RestoredBy, @RestoredDate, @MaritialStatus, @Relation1, @FatherName, @FatherAadhar,
      @Relation2, @MotherName, @MotherAdhar, @Chaild1Name, @Chaild2Name, @EmpExpType, @ExptSalaryAnnum, @SalaryAnnum,
      @SalaryMonth, @Experience, @LastOneCompanyName, @LastOnePrevSalaryAnnum, @LastOnePrevSalaryMonth,
      @LastTwoCompanyName, @LastTwoPrevSalaryAnnum, @LastTwoPrevSalaryMonth, @EditDetailsStatus, @EmpInActiveDate,
      @FatherMobile, @MotherMobile, @BranchCode, @EducationPerventage1, @EducationPerventage2, @Last1CompanyDesignation,
      @Last2CompanyDesignation, @Last1CompanyFromYear, @Last1CompanyToYear, @Last2CompanyFromYear, @Last2CompanyToYear,
      @Last1CompanyMobileNumber, @Last2CompanyMobileYear, @NomineeName, @NomineeRelation, @SpouseName, @NomineeMobile,
      @NomineeAadhar,@ShiftType,@Shift2,@Shift3
  );";

          using (SqlCommand sqlCmd = new SqlCommand(insertQuery, sqlConn))
          {
              // Add parameters with data type conversion
              sqlCmd.Parameters.AddWithValue("@Salutation", ddlsalutation.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@FirstName", txtaddsurname.Text);
              sqlCmd.Parameters.AddWithValue("@LastName", txtaddlastname.Text);

              // Assuming Image upload control, converting to byte array

              byte[] imageBytes = null;
              if (addimage.HasFile)
              {
                  using (BinaryReader br = new BinaryReader(addimage.PostedFile.InputStream))
                  {
                      imageBytes = br.ReadBytes(addimage.PostedFile.ContentLength);
                  }
              }
              sqlCmd.Parameters.AddWithValue("@Image", imageBytes ?? (object)DBNull.Value);


              sqlCmd.Parameters.AddWithValue("@DOB", Convert.ToDateTime(txtadddob.Text));
              sqlCmd.Parameters.AddWithValue("@DOJ", Convert.ToDateTime(txtadddoj.Text));
              sqlCmd.Parameters.AddWithValue("@Gender", ddlgender.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Company", ddladdcompany.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Branch", ddladdbranch.SelectedItem.Text);

              //  int branchId = Convert.ToInt32(ddlbranch.SelectedValue);
              //  string branchCode = (branchId + 100).ToString();
              int branchId;
              string branchCode = null;

              if (!string.IsNullOrEmpty(ddlbranch.SelectedValue))
              {
                  if (int.TryParse(ddlbranch.SelectedValue, out  branchId))
                  {
                       branchCode = (branchId + 100).ToString();
                      // Use branchCode as needed
                  }
                  else
                  {
                      // Handle case where SelectedValue is not a valid integer
                      // Optionally provide feedback or take appropriate action
                  }
              }
              else
              {
                  
              }


              sqlCmd.Parameters.AddWithValue("@Department", ddladddepartment.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Designation", TextBox4.Text);
              sqlCmd.Parameters.AddWithValue("@CompanyId", Convert.ToInt32(ddlcompany.SelectedItem.Value));
              sqlCmd.Parameters.AddWithValue("@BranchId", Convert.ToInt32(ddlbranch.SelectedItem.Value));
              sqlCmd.Parameters.AddWithValue("@DepartmentId", Convert.ToInt32(ddldepartment.SelectedItem.Value));
              sqlCmd.Parameters.AddWithValue("@EmployeType", ddlemptype.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@EmpTypeId", Convert.ToInt32(ddlemptype.SelectedItem.Value));
              sqlCmd.Parameters.AddWithValue("@CompanyEmail", TextBox5.Text);
              sqlCmd.Parameters.AddWithValue("@PersonalEmail", TextBox6.Text);
              sqlCmd.Parameters.AddWithValue("@CompanyCellNo", txtCompanyCellNo.Text);
              sqlCmd.Parameters.AddWithValue("@PersonalCelloNo", txtPersonalCelloNo.Text);
              sqlCmd.Parameters.AddWithValue("@PresentAddress", txtPresentAddress.Text);
              sqlCmd.Parameters.AddWithValue("@PermanentAddress", txtPermanentAddress.Text);
              sqlCmd.Parameters.AddWithValue("@BloodGroup", ddlbloodgroup.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Status", 1);
              sqlCmd.Parameters.AddWithValue("@BankName", txtBankName.Text);
              sqlCmd.Parameters.AddWithValue("@BankAccNo", txtBankAccNo.Text);
              sqlCmd.Parameters.AddWithValue("@IFSC", txtIFSC.Text);
              sqlCmd.Parameters.AddWithValue("@PFStatus", ddlpfstatus.SelectedItem.Text);
              if (ddlpfstatus.SelectedValue == "1")
              {
                  sqlCmd.Parameters.AddWithValue("@PfNo", txtPfNo.Text);
                  sqlCmd.Parameters.AddWithValue("@Esino", txtEsino.Text);
              }
              else if (ddlpfstatus.SelectedValue == "2")
              {
                  sqlCmd.Parameters.AddWithValue("@PfNo", "No");
                  sqlCmd.Parameters.AddWithValue("@Esino", "No");
              }
              sqlCmd.Parameters.AddWithValue("@PfStatusId", Convert.ToInt32(ddlpfstatus.SelectedItem.Value));
             
              sqlCmd.Parameters.AddWithValue("@PanNo", txtPanNo.Text);
              sqlCmd.Parameters.AddWithValue("@Shift", txtaddshift3.Text);
              sqlCmd.Parameters.AddWithValue("@ShiftId", Convert.ToInt32(ddladdshifttype.SelectedItem.Value));
              sqlCmd.Parameters.AddWithValue("@Tocken",123456);
              sqlCmd.Parameters.AddWithValue("@EmpActivaDate", DateTime.Now);
              sqlCmd.Parameters.AddWithValue("@CasualLeaves", 12);
              sqlCmd.Parameters.AddWithValue("@TaxId", 123);
              sqlCmd.Parameters.AddWithValue("@HighEducation1", txtHighEducation1.Text);
              sqlCmd.Parameters.AddWithValue("@EducationYear1", Convert.ToInt32(txtEducationYear1.Text));
              sqlCmd.Parameters.AddWithValue("@EducationUniversity1", txtEducationUniversity1.Text);
              sqlCmd.Parameters.AddWithValue("@HighEducation2", txtHighEducation2.Text);
              sqlCmd.Parameters.AddWithValue("@EducationYear2", Convert.ToInt32(txtEducationYear2.Text));
              sqlCmd.Parameters.AddWithValue("@EducationUniversity2", txtEducationUniversity2.Text);
              sqlCmd.Parameters.AddWithValue("@CreatedBy", Session["Name"].ToString());
              sqlCmd.Parameters.AddWithValue("@CreatedDate", DateTime.Now);
              sqlCmd.Parameters.AddWithValue("@UpdatedBy", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@UpdatedDate", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@UpdatedCount", 0);
              sqlCmd.Parameters.AddWithValue("@DeleteBy", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@DeletedDate", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@DeletedStatus", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@RestoredBy", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@RestoredDate", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@MaritialStatus", ddlmaritialstatus.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Relation1", txtRelation1.Text);
              sqlCmd.Parameters.AddWithValue("@FatherName", txtFatherName.Text);
              sqlCmd.Parameters.AddWithValue("@FatherAadhar", txtFatherAadhar.Text);
              sqlCmd.Parameters.AddWithValue("@Relation2", txtRelation2.Text);
              sqlCmd.Parameters.AddWithValue("@MotherName", txtMotherName.Text);
              sqlCmd.Parameters.AddWithValue("@MotherAdhar", txtMotherAdhar.Text);
              sqlCmd.Parameters.AddWithValue("@Chaild1Name", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@Chaild2Name", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@EmpExpType", ddlempextype.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@ExptSalaryAnnum", txtaddexpectedsalary.Text);

              if (ddlempextype.SelectedItem.Text == "Fresher")
              {
                  sqlCmd.Parameters.AddWithValue("@Experience", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastOneCompanyName", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastOnePrevSalaryAnnum", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastOnePrevSalaryMonth", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastTwoCompanyName", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastTwoPrevSalaryAnnum", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@LastTwoPrevSalaryMonth", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyDesignation", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyDesignation", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyFromYear", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyToYear", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyFromYear", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyToYear", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyMobileNumber", DBNull.Value);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyMobileYear", DBNull.Value);
              }
              else
              {
                  sqlCmd.Parameters.AddWithValue("@Experience", txtexpirienceyears.Text);
                  sqlCmd.Parameters.AddWithValue("@LastOneCompanyName", txtlast1company.Text);

                  int salary1annum = Convert.ToInt32(txtlast1salaryannum.Text);
                  int monthsalary1 = salary1annum / 12;

                  sqlCmd.Parameters.AddWithValue("@LastOnePrevSalaryAnnum", salary1annum.ToString());
                  sqlCmd.Parameters.AddWithValue("@LastOnePrevSalaryMonth", monthsalary1.ToString());
                  sqlCmd.Parameters.AddWithValue("@LastTwoCompanyName", txtlast2companyname.Text);

                  int salary2annum = Convert.ToInt32(txtlast2companysalaryannum.Text);
                  int monthsalary2 = salary2annum / 12;

                  sqlCmd.Parameters.AddWithValue("@LastTwoPrevSalaryAnnum", salary2annum.ToString());
                  sqlCmd.Parameters.AddWithValue("@LastTwoPrevSalaryMonth", monthsalary2.ToString());

                  sqlCmd.Parameters.AddWithValue("@Last1CompanyDesignation", txtlast1designation.Text);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyDesignation", txtlast2designation.Text);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyFromYear", txtlast1fromyear.Text);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyToYear", txtlast1toyear.Text);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyFromYear", txtlast2fromyear.Text);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyToYear", txtlast2toyear.Text);
                  sqlCmd.Parameters.AddWithValue("@Last1CompanyMobileNumber", txtlast1mobile.Text);
                  sqlCmd.Parameters.AddWithValue("@Last2CompanyMobileYear", txtlast2companymobile.Text);
              }
             
              int salaryannum = Convert.ToInt32(txtSalaryAnnum.Text);
              int monthsalary = salaryannum / 12;

              sqlCmd.Parameters.AddWithValue("@SalaryAnnum", salaryannum.ToString());
              sqlCmd.Parameters.AddWithValue("@SalaryMonth", monthsalary.ToString());                       
              sqlCmd.Parameters.AddWithValue("@EditDetailsStatus", "Not Edited");
              sqlCmd.Parameters.AddWithValue("@EmpInActiveDate", DBNull.Value);
              sqlCmd.Parameters.AddWithValue("@FatherMobile", txtFatherMobile.Text);
              sqlCmd.Parameters.AddWithValue("@MotherMobile", txtMotherMobile.Text);
              sqlCmd.Parameters.AddWithValue("@BranchCode", branchCode);
              sqlCmd.Parameters.AddWithValue("@EmployeeCode", Convert.ToInt32(branchCode)); 
              sqlCmd.Parameters.AddWithValue("@EducationPerventage1", txt1educationpercentage.Text);
              sqlCmd.Parameters.AddWithValue("@EducationPerventage2", txt2educationpercentage.Text);                  
              sqlCmd.Parameters.AddWithValue("@NomineeName", txtnominename.Text);
              sqlCmd.Parameters.AddWithValue("@NomineeRelation",txtnominerelation.Text);
              sqlCmd.Parameters.AddWithValue("@SpouseName", txtspousename.Text);
              sqlCmd.Parameters.AddWithValue("@NomineeMobile", txtnomineemobile.Text);
              sqlCmd.Parameters.AddWithValue("@NomineeAadhar", txtnomineeadhar.Text);
              sqlCmd.Parameters.AddWithValue("@ShiftType", ddladdshifttype.SelectedItem.Text);
              sqlCmd.Parameters.AddWithValue("@Shift2", txtaddshift2.Text);
              sqlCmd.Parameters.AddWithValue("@Shift3", txtaddshift3.Text);
              sqlConn.Open();
              sqlCmd.ExecuteNonQuery();
              sqlConn.Close();
          }
      }
  }
  catch (Exception ex)
  {
    
      throw ex;
  }











